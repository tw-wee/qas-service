buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.flywaydb:flyway-gradle-plugin:$flywayVersion")
        classpath("se.transmode.gradle:gradle-docker:$gradleDockerVersion")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'application'
apply plugin: 'checkstyle'
//apply plugin: 'findbugs'
apply plugin: 'docker'
apply from: 'jacoco.gradle'
//apply from: 'database.gradle'

group = 'tw-wee'
mainClassName = "tw.wee.qas.Application"

jar {
    baseName = "$jarBaseName"
    version = "$jarVersion"
}

repositories {
    mavenCentral()
}

sourceCompatibility = "$javaVersion"
targetCompatibility = "$javaVersion"
idea.project.vcs = "Git"

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
    }
    test {
        java.srcDirs = ['src/test/java', 'src/integrationTest/java']
        resources.srcDirs = ['src/test/resources', 'src/integrationTest/resources']
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    compile("org.apache.logging.log4j:log4j:$log4jVersion")
    compile("org.flywaydb:flyway-core:$flywayVersion")
    compile("mysql:mysql-connector-java:$mysqlVersion")
    compile("io.springfox:springfox-swagger2:$swaggerVersion")
    compile("io.springfox:springfox-swagger-ui:$swaggerVersion")
    compile("ma.glasnost.orika:orika-core:$orikaVersion")
    testCompile("com.jayway.jsonpath:json-path")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

defaultTasks 'clean', 'build'

//checkstyleTest.exclude '**/*.*'
//checkstyleIntegrationTest.exclude '**/*.*'

//clean.dependsOn createDB
clean.dependsOn flywayRepair
build.dependsOn flywayMigrate

test {
    exclude '**/*IntegrationTest.class'
}
task unitTest(dependsOn: test)

task integrationTest(type: Test) {
    include '**/*IntegrationTest.class'
}
build.dependsOn integrationTest


task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}